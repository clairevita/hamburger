const express = require("express");
const burger = require("../models/burger.js");
const router = express.Router();
//This express `get` function directs the user to the `/` end point, covering the necessary steps to properly render the front end.
router.get("/", function (req, res) {
  //This function is defined in the `orm.js` script.
  burger.selectAll(function (data) {
    //Here we define the database values (all of them) to be show on the website
    const hbObj = {
      burgers: data
    };
    //We render the index.html file to our end user
    res.render("index", hbObj);
  });
});
//This express `post` function puts a new row into our database according to the user's request (`req`)
router.post("/api/burgers", function (req, res) {
  //The createOne function is defined in the `orm.js` script. 
  burger.createOne(["burger_name", "devoured"], [req.body.burger_name, req.body.devoured], function (result) {
    //Here we respond with a JSON containing the autogenerated ID of the result
    res.json({ id: result.insertId });
  });
});
//This express `put` function updates our database according to a paramater in the URL request.
router.put("/api/burgers/:id", function (req, res) {
  //Here we establish the id of the row we want to change according to the value sent to the url
  let condition = "id = " + req.params.id;
  //The updateOne function is defined in the `orm.js` script.
  burger.updateOne(condition, function (result) {
    //If nothing happens, we send a 404, implying the url request has an error
    if (result.changedRows == 0) {
      return res.status(404).end();
    } else {
      //Otherwise we send back a OK and end the response process.
      res.status(200).end();
    }
  });
});

module.exports = router;